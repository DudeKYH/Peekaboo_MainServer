{
  "version": 3,
  "sources": ["../../src/events/onS2G.event.js"],
  "sourcesContent": ["import BaseEvent from '@peekaboo-ssr/events/BaseEvent';\r\nimport config from '@peekaboo-ssr/config/gateway';\r\nimport { getSocketByRemote } from '../sessions/sessions.js';\r\nimport { sendPacketToClient } from '../utils/response/client.response.js';\r\n\r\nclass S2GEventHandler extends BaseEvent {\r\n  onConnection(socket) {\r\n    console.log(\r\n      `Service connected from: `,\r\n      socket.options.host,\r\n      socket.options.port,\r\n    );\r\n    socket.buffer = Buffer.alloc(0);\r\n  }\r\n\r\n  async onData(socket, data) {\r\n    // \uAC8C\uC774\uD2B8\uC5D0\uC11C \uD074\uB77C\uC774\uC5B8\uD2B8\uD55C\uD14C \uBCF4\uB0B4\uAE30.\r\n    console.log('\uAC8C\uC774\uD2B8\uAC00 \uC11C\uBE44\uC2A4\uB85C\uBD80\uD130 \uB370\uC774\uD130\uB97C \uBC1B\uC74C..', data);\r\n    socket.buffer = Buffer.concat([socket.buffer, data]);\r\n\r\n    while (\r\n      socket.buffer.length >=\r\n      config.header.client.typeLength + config.header.client.clientKeyLength\r\n    ) {\r\n      let offset = 0;\r\n      const packetType = socket.buffer.readUint16BE(offset);\r\n      offset += config.header.client.typeLength;\r\n      console.log(packetType);\r\n\r\n      const clientKeyLength = socket.buffer.readUInt8(offset);\r\n      offset += config.header.client.clientKeyLength;\r\n      console.log(clientKeyLength);\r\n\r\n      const clientKey = socket.buffer\r\n        .subarray(offset, offset + clientKeyLength)\r\n        .toString();\r\n      console.log(clientKey);\r\n      offset += clientKeyLength;\r\n\r\n      const totalHeaderLength =\r\n        config.header.client.typeLength +\r\n        config.header.client.clientKeyLength +\r\n        clientKeyLength;\r\n\r\n      if (socket.buffer.length < totalHeaderLength) {\r\n        break;\r\n      }\r\n\r\n      const payloadLength = socket.buffer.readUint32BE(offset);\r\n      offset += config.header.client.payloadLength;\r\n      console.log(payloadLength);\r\n      const totalPacketLength = totalHeaderLength + payloadLength;\r\n\r\n      if (socket.buffer.length < totalPacketLength) {\r\n        break;\r\n      }\r\n      const payloadBuffer = socket.buffer.subarray(\r\n        offset,\r\n        offset + payloadLength,\r\n      );\r\n      offset += payloadLength;\r\n      try {\r\n        socket.buffer = socket.buffer.subarray(offset);\r\n        // \uC5EC\uAE30\uC11C \uD074\uB77C\uC774\uC5B8\uD2B8\uB97C \uCC3E\uC544\uC11C \uBCF4\uB0B4\uB294 \uC791\uC5C5 \uD558\uBA74 \uB420 \uAC83 \uAC19\uC74C.\r\n        const client = getSocketByRemote(clientKey);\r\n\r\n        if (!client) {\r\n          throw new Error('\uD074\uB77C\uC774\uC5B8\uD2B8\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C!!');\r\n        }\r\n\r\n        sendPacketToClient(packetType, client, payloadBuffer);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  onEnd(socket) {\r\n    console.log(\r\n      'Disconnected Service: ',\r\n      socket.remoteAddress,\r\n      socket.remotePort,\r\n    );\r\n  }\r\n\r\n  onError(socket, err) {\r\n    console.log(\r\n      'Disconnected Service: ',\r\n      socket.remoteAddress,\r\n      socket.remotePort,\r\n    );\r\n  }\r\n}\r\n\r\nexport default S2GEventHandler;\r\n"],
  "mappings": "AAAA,OAAO,eAAe;AACtB,OAAO,YAAY;AACnB,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AAEnC,MAAM,wBAAwB,UAAU;AAAA,EACtC,aAAa,QAAQ;AACnB,YAAQ;AAAA,MACN;AAAA,MACA,OAAO,QAAQ;AAAA,MACf,OAAO,QAAQ;AAAA,IACjB;AACA,WAAO,SAAS,OAAO,MAAM,CAAC;AAAA,EAChC;AAAA,EAEA,MAAM,OAAO,QAAQ,MAAM;AAEzB,YAAQ,IAAI,yGAAyB,IAAI;AACzC,WAAO,SAAS,OAAO,OAAO,CAAC,OAAO,QAAQ,IAAI,CAAC;AAEnD,WACE,OAAO,OAAO,UACd,OAAO,OAAO,OAAO,aAAa,OAAO,OAAO,OAAO,iBACvD;AACA,UAAI,SAAS;AACb,YAAM,aAAa,OAAO,OAAO,aAAa,MAAM;AACpD,gBAAU,OAAO,OAAO,OAAO;AAC/B,cAAQ,IAAI,UAAU;AAEtB,YAAM,kBAAkB,OAAO,OAAO,UAAU,MAAM;AACtD,gBAAU,OAAO,OAAO,OAAO;AAC/B,cAAQ,IAAI,eAAe;AAE3B,YAAM,YAAY,OAAO,OACtB,SAAS,QAAQ,SAAS,eAAe,EACzC,SAAS;AACZ,cAAQ,IAAI,SAAS;AACrB,gBAAU;AAEV,YAAM,oBACJ,OAAO,OAAO,OAAO,aACrB,OAAO,OAAO,OAAO,kBACrB;AAEF,UAAI,OAAO,OAAO,SAAS,mBAAmB;AAC5C;AAAA,MACF;AAEA,YAAM,gBAAgB,OAAO,OAAO,aAAa,MAAM;AACvD,gBAAU,OAAO,OAAO,OAAO;AAC/B,cAAQ,IAAI,aAAa;AACzB,YAAM,oBAAoB,oBAAoB;AAE9C,UAAI,OAAO,OAAO,SAAS,mBAAmB;AAC5C;AAAA,MACF;AACA,YAAM,gBAAgB,OAAO,OAAO;AAAA,QAClC;AAAA,QACA,SAAS;AAAA,MACX;AACA,gBAAU;AACV,UAAI;AACF,eAAO,SAAS,OAAO,OAAO,SAAS,MAAM;AAE7C,cAAM,SAAS,kBAAkB,SAAS;AAE1C,YAAI,CAAC,QAAQ;AACX,gBAAM,IAAI,MAAM,yEAAkB;AAAA,QACpC;AAEA,2BAAmB,YAAY,QAAQ,aAAa;AAAA,MACtD,SAAS,GAAG;AACV,gBAAQ,MAAM,CAAC;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,QAAQ;AACZ,YAAQ;AAAA,MACN;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,QAAQ,QAAQ,KAAK;AACnB,YAAQ;AAAA,MACN;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,IAAO,sBAAQ;",
  "names": []
}
